{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\Spotify Project\\\\SPOTIFY-FRONTEND-GOOD\\\\spot\\\\src\\\\layouts\\\\HomePage\\\\Components\\\\SongList.jsx\",\n  _s = $RefreshSig$();\nimport { initializeApp } from \"firebase/app\";\nimport { useEffect, useState } from \"react\";\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\nimport { StatusBar } from \"./Footer/StatusBar\";\nimport { Sound, getCurrentSongName, start, pause, play, restart } from \"./Sound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet songsList = [];\nexport function SongList() {\n  _s();\n  const [songName, setSongName] = useState('');\n  const [artistName, setArtistName] = useState('');\n  const [albumName, setAlbumName] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [songsList, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(StatusBar, {\n        songName: songName,\n        artistName: artistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(AlbumTextButton, {\n        albumName: albumName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PreviousButton, {\n        setSongName: setSongName,\n        setArtistName: setArtistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PauseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PlayButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        setSongName: setSongName,\n        setArtistName: setArtistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n  function NextButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextButtonClick,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this);\n  }\n  function handleNextButtonClick() {\n    getNextSong();\n  }\n  function PauseButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePauseButton,\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this);\n  }\n  function handlePauseButton() {\n    pause();\n  }\n  function PlayButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlayButton,\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this);\n  }\n  function handlePlayButton() {\n    play();\n    initializeApp();\n  }\n  function PreviousButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePreviousButtonClick,\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 14\n    }, this);\n  }\n  function handlePreviousButtonClick() {\n    getPreviousSong();\n  }\n  function getNextSong() {\n    for (let i = 0; i < songsList.length; i++) {\n      if (songsList[i].props.name === getCurrentSongName()) {\n        restart();\n        if (i === songsList.length - 1) start(songsList[0].props);else start(songsList[i + 1].props);\n        break;\n      }\n    }\n  }\n  function updateSongLibraryByAlbum(props) {\n    setIsLoading(true);\n    songsList.length = 0;\n    console.log('hi');\n    fetch(\"http://localhost:8080/song/getAllSongs\",\n    //fetch(\"https://alexsherrowspotify.herokuapp.com/song/getAllSongs\",\n    {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(result => {\n      result = JSON.stringify(result);\n      result = JSON.parse(result);\n      for (const key in result) {\n        console.log(result[key].album);\n        console.log(props.albumName);\n        if (result[key].album == props.albumName) {\n          songsList.push( /*#__PURE__*/_jsxDEV(Sound, {\n            path: result[key].url,\n            name: result[key].name,\n            artist: result[key].artist,\n            album: result[key].album,\n            setSongName: setSongName,\n            setArtistName: setArtistName,\n            setAlbumName: setAlbumName\n          }, result[key].id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 3\n          }, this));\n        }\n      }\n      setIsLoading(false);\n    });\n  }\n  function AlbumTextButton(props) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: updateSongLibraryByAlbum(props),\n      children: props.albumName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 1\n    }, this);\n  }\n  function getPreviousSong() {\n    for (let i = 0; i < songsList.length; i++) {\n      if (songsList[i].props.name === getCurrentSongName()) {\n        restart();\n        if (i === 0) start(songsList[songsList.length - 1].props);else start(songsList[i - 1].props);\n        break;\n      }\n    }\n  }\n}\n_s(SongList, \"sJAQnNPDR3aQiDQ5h3fhjgj3Qko=\");\n_c = SongList;\nvar _c;\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"names":["initializeApp","useEffect","useState","SpinnerLoading","StatusBar","Sound","getCurrentSongName","start","pause","play","restart","songsList","SongList","songName","setSongName","artistName","setArtistName","albumName","setAlbumName","isLoading","setIsLoading","NextButton","handleNextButtonClick","getNextSong","PauseButton","handlePauseButton","PlayButton","handlePlayButton","PreviousButton","handlePreviousButtonClick","getPreviousSong","i","length","props","name","updateSongLibraryByAlbum","console","log","fetch","method","headers","then","res","json","result","JSON","stringify","parse","key","album","push","url","artist","id","AlbumTextButton"],"sources":["C:/Users/Alex/Documents/Spotify Project/SPOTIFY-FRONTEND-GOOD/spot/src/layouts/HomePage/Components/SongList.jsx"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\r\nimport { StatusBar } from \"./Footer/StatusBar\";\r\nimport { Sound, getCurrentSongName, start, pause, play, restart } from \"./Sound\";\r\n\r\nlet songsList = [];\r\n\r\nexport function SongList() {\r\n  const [songName, setSongName] = useState('');\r\n  const [artistName, setArtistName] = useState('');\r\n  const [albumName, setAlbumName] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <SpinnerLoading/>\r\n    )\r\n  }\r\n    return (\r\n    <>\r\n    {songsList}\r\n    <div>\r\n    <StatusBar\r\n    songName={songName} \r\n    artistName={artistName}/>\r\n    <AlbumTextButton albumName = {albumName}/>\r\n    <PreviousButton setSongName = {setSongName} setArtistName = {setArtistName}/>\r\n    <PauseButton/>\r\n    <PlayButton/>\r\n    <NextButton setSongName = {setSongName} setArtistName = {setArtistName}/>\r\n    </div>\r\n    </>\r\n    );\r\n    \r\n     function NextButton() {\r\n      return <button onClick={handleNextButtonClick}>Next</button>;\r\n    }\r\n    \r\n    function handleNextButtonClick() {\r\n      getNextSong();\r\n    }\r\n\r\n    function PauseButton() {\r\n      return (\r\n          <button onClick={handlePauseButton}>Pause</button>\r\n      );\r\n    }\r\n    \r\n    function handlePauseButton() {\r\n          pause();\r\n    }\r\n\r\n    function PlayButton() {\r\n      return (\r\n          <button onClick={handlePlayButton}>Play</button>\r\n      );\r\n    }\r\n    \r\n    function handlePlayButton() {\r\n        play();\r\n        initializeApp();\r\n    }\r\n\r\n    function PreviousButton() {\r\n      return <button onClick={handlePreviousButtonClick}>Prev</button>;\r\n    }\r\n    \r\n    function handlePreviousButtonClick() {\r\n      getPreviousSong();\r\n    }\r\n\r\n    function getNextSong() \r\n{\r\n  for(let i = 0; i < songsList.length; i++)\r\n  {\r\n    if(songsList[i].props.name === getCurrentSongName())\r\n    {\r\n      restart();\r\n      if(i === songsList.length - 1)\r\n      start(songsList[0].props);\r\n      else\r\n      start(songsList[i + 1].props);\r\n      break;\r\n    }\r\n  }\r\n}\r\nfunction updateSongLibraryByAlbum(props)\r\n{\r\n  setIsLoading(true);\r\n  songsList.length = 0;\r\n\r\n  console.log('hi');\r\n  fetch(\"http://localhost:8080/song/getAllSongs\",\r\n//fetch(\"https://alexsherrowspotify.herokuapp.com/song/getAllSongs\",\r\n{\r\n  method:\"GET\",\r\n  headers:{\"Content-Type\":\"application/json\"},\r\n}\r\n)\r\n.then(res=>res.json())\r\n.then((result)=>{\r\nresult = JSON.stringify(result);\r\nresult = JSON.parse(result);\r\n\r\nfor(const key in result)\r\n{\r\n  console.log(result[key].album);\r\n  console.log(props.albumName);\r\n  if(result[key].album == props.albumName)\r\n  {\r\n\r\n  songsList.push(\r\n  <Sound key = {result[key].id}\r\n  path = {result[key].url}\r\n  name = {result[key].name}\r\n  artist = {result[key].artist}\r\n  album = {result[key].album}\r\n  setSongName = {setSongName}\r\n  setArtistName = {setArtistName}\r\n  setAlbumName = {setAlbumName}\r\n  />);\r\n  }\r\n}\r\nsetIsLoading(false);\r\n}\r\n)\r\n}\r\n\r\nfunction AlbumTextButton(props)\r\n{\r\nreturn (\r\n<h1 onClick={updateSongLibraryByAlbum(props)}>{props.albumName}</h1>\r\n);\r\n}\r\n\r\n\r\nfunction getPreviousSong() \r\n{\r\n  for(let i = 0; i < songsList.length; i++)\r\n  {\r\n    if(songsList[i].props.name === getCurrentSongName())\r\n    {\r\n      restart();\r\n      if(i === 0)\r\n      start(songsList[songsList.length - 1].props);\r\n      else\r\n      start(songsList[i - 1].props);\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}