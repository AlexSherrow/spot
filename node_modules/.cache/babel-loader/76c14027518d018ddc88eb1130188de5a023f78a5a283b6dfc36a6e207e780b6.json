{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\Spotify Project\\\\SPOTIFY-FRONTEND-GOOD\\\\spot\\\\src\\\\layouts\\\\HomePage\\\\Components\\\\SongList.jsx\",\n  _s = $RefreshSig$();\nimport { initializeApp } from \"firebase/app\";\nimport { useEffect, useState } from \"react\";\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\nimport { StatusBar } from \"./Footer/StatusBar\";\nimport { Sound, getCurrentSongName, start, pause, play, restart } from \"./Sound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet songsList = [];\nlet isLoading = false;\nlet artistName = '';\nlet songName = '';\nexport function SongList() {\n  _s();\n  useEffect(() => {\n    fetch(\"http://localhost:8080/song/getAllSongs\",\n    //fetch(\"https://alexsherrowspotify.herokuapp.com/song/getAllSongs\",\n    {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(result => {\n      setIsLoading(true);\n      result = JSON.stringify(result);\n      result = JSON.parse(result);\n      for (const key in result) {\n        songsList.push( /*#__PURE__*/_jsxDEV(Sound, {\n          path: result[key].url,\n          name: result[key].name,\n          artist: result[key].artist,\n          album: result[key].album,\n          setSongName: setSongName,\n          setArtistName: setArtistName\n        }, result[key].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }, this));\n      }\n      setIsLoading(false);\n    });\n  }, [songsList]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [songsList, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(StatusBar, {\n        songName: songName,\n        artistName: artistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PreviousButton, {\n        setSongName: setSongName,\n        setArtistName: setArtistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PauseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PlayButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        setSongName: setSongName,\n        setArtistName: setArtistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n  function Button() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateSongLibrary,\n      children: \" Hi \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 14\n    }, this);\n  }\n  function NextButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextButtonClick,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 14\n    }, this);\n  }\n  function handleNextButtonClick() {\n    getNextSong();\n  }\n  function PauseButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePauseButton,\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this);\n  }\n  function handlePauseButton() {\n    pause();\n  }\n  function PlayButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlayButton,\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this);\n  }\n  function handlePlayButton() {\n    play();\n    initializeApp();\n  }\n  function PreviousButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePreviousButtonClick,\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 14\n    }, this);\n  }\n  function handlePreviousButtonClick() {\n    getPreviousSong();\n  }\n  function getNextSong() {\n    for (let i = 0; i < songsList.length; i++) {\n      if (songsList[i].props.name === getCurrentSongName()) {\n        restart();\n        if (i === songsList.length - 1) start(songsList[0].props);else start(songsList[i + 1].props);\n        break;\n      }\n    }\n  }\n  function getPreviousSong() {\n    for (let i = 0; i < songsList.length; i++) {\n      if (songsList[i].props.name === getCurrentSongName()) {\n        restart();\n        if (i === 0) start(songsList[songsList.length - 1].props);else start(songsList[i - 1].props);\n        break;\n      }\n    }\n  }\n}\n_s(SongList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = SongList;\nexport function updateSongLibrary() {\n  setIsLoading(true);\n  songsList.length = 0;\n  fetch(\"http://localhost:8080/song/getAllSongs\",\n  //fetch(\"https://alexsherrowspotify.herokuapp.com/song/getAllSongs\",\n  {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => res.json()).then(result => {\n    result = JSON.stringify(result);\n    result = JSON.parse(result);\n    for (const key in result) {\n      songsList.push( /*#__PURE__*/_jsxDEV(Sound, {\n        path: result[key].url,\n        name: result[key].name,\n        artist: result[key].artist,\n        album: 'hi',\n        setSongName: setSongName,\n        setArtistName: setArtistName\n      }, result[key].id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 3\n      }, this));\n    }\n    setIsLoading(false);\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"names":["initializeApp","useEffect","useState","SpinnerLoading","StatusBar","Sound","getCurrentSongName","start","pause","play","restart","songsList","isLoading","artistName","songName","SongList","fetch","method","headers","then","res","json","result","setIsLoading","JSON","stringify","parse","key","push","url","name","artist","album","setSongName","setArtistName","id","Button","updateSongLibrary","NextButton","handleNextButtonClick","getNextSong","PauseButton","handlePauseButton","PlayButton","handlePlayButton","PreviousButton","handlePreviousButtonClick","getPreviousSong","i","length","props"],"sources":["C:/Users/Alex/Documents/Spotify Project/SPOTIFY-FRONTEND-GOOD/spot/src/layouts/HomePage/Components/SongList.jsx"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\r\nimport { StatusBar } from \"./Footer/StatusBar\";\r\nimport { Sound, getCurrentSongName, start, pause, play, restart } from \"./Sound\";\r\n\r\nlet songsList = [];\r\nlet isLoading = false;\r\nlet artistName = '';\r\nlet songName = '';\r\n\r\nexport function SongList() {\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/song/getAllSongs\",\r\n    //fetch(\"https://alexsherrowspotify.herokuapp.com/song/getAllSongs\",\r\n    {\r\n      method:\"GET\",\r\n      headers:{\"Content-Type\":\"application/json\"},\r\n    }\r\n    )\r\n  .then(res=>res.json())\r\n  .then((result)=>{\r\n    setIsLoading(true);\r\n    result = JSON.stringify(result);\r\n    result = JSON.parse(result);\r\n\r\n    for(const key in result)\r\n    {\r\n      songsList.push(\r\n      <Sound key = {result[key].id}\r\n      path = {result[key].url}\r\n      name = {result[key].name}\r\n      artist = {result[key].artist}\r\n      album = {result[key].album}\r\n      setSongName = {setSongName}\r\n      setArtistName = {setArtistName}/>);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n)\r\n\r\n}, [songsList]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <SpinnerLoading/>\r\n    )\r\n  }\r\n    return (\r\n    <>\r\n    {songsList}\r\n    <div>\r\n    <StatusBar\r\n    songName={songName} \r\n    artistName={artistName}/>\r\n    <PreviousButton setSongName = {setSongName} setArtistName = {setArtistName}/>\r\n    <PauseButton/>\r\n    <PlayButton/>\r\n    <NextButton setSongName = {setSongName} setArtistName = {setArtistName}/>\r\n    <Button/>\r\n    </div>\r\n    </>\r\n    );\r\n    \r\n    function Button() {\r\n      return <button onClick ={updateSongLibrary}> Hi </button>\r\n    }\r\n\r\n     function NextButton() {\r\n      return <button onClick={handleNextButtonClick}>Next</button>;\r\n    }\r\n    \r\n    function handleNextButtonClick() {\r\n      getNextSong();\r\n    }\r\n\r\n    function PauseButton() {\r\n      return (\r\n          <button onClick={handlePauseButton}>Pause</button>\r\n      );\r\n    }\r\n    \r\n    function handlePauseButton() {\r\n          pause();\r\n    }\r\n\r\n    function PlayButton() {\r\n      return (\r\n          <button onClick={handlePlayButton}>Play</button>\r\n      );\r\n    }\r\n    \r\n    function handlePlayButton() {\r\n        play();\r\n        initializeApp();\r\n    }\r\n\r\n    function PreviousButton() {\r\n      return <button onClick={handlePreviousButtonClick}>Prev</button>;\r\n    }\r\n    \r\n    function handlePreviousButtonClick() {\r\n      getPreviousSong();\r\n    }\r\n\r\n    function getNextSong() \r\n{\r\n  for(let i = 0; i < songsList.length; i++)\r\n  {\r\n    if(songsList[i].props.name === getCurrentSongName())\r\n    {\r\n      restart();\r\n      if(i === songsList.length - 1)\r\n      start(songsList[0].props);\r\n      else\r\n      start(songsList[i + 1].props);\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction getPreviousSong() \r\n{\r\n  for(let i = 0; i < songsList.length; i++)\r\n  {\r\n    if(songsList[i].props.name === getCurrentSongName())\r\n    {\r\n      restart();\r\n      if(i === 0)\r\n      start(songsList[songsList.length - 1].props);\r\n      else\r\n      start(songsList[i - 1].props);\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\n}\r\n\r\nexport function updateSongLibrary()\r\n{\r\n  setIsLoading(true);\r\n  songsList.length = 0;\r\n\r\n  fetch(\"http://localhost:8080/song/getAllSongs\",\r\n//fetch(\"https://alexsherrowspotify.herokuapp.com/song/getAllSongs\",\r\n{\r\n  method:\"GET\",\r\n  headers:{\"Content-Type\":\"application/json\"},\r\n}\r\n)\r\n.then(res=>res.json())\r\n.then((result)=>{\r\nresult = JSON.stringify(result);\r\nresult = JSON.parse(result);\r\n\r\nfor(const key in result)\r\n{\r\n  songsList.push(\r\n  <Sound key = {result[key].id}\r\n  path = {result[key].url}\r\n  name = {result[key].name}\r\n  artist = {result[key].artist}\r\n  album = {'hi'}\r\n  setSongName = {setSongName}\r\n  setArtistName = {setArtistName}/>);\r\n}\r\nsetIsLoading(false);\r\n}\r\n)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}