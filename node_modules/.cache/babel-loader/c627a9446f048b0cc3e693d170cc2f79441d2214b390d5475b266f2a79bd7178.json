{"ast":null,"code":"import { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { useState } from \"react\";\nimport storage from \"./firebaseConfig\";\nexport const uploadFiles = (file, name, artist, setProgress) => {\n  // State to store uploaded file\n  const storageRef = ref(storage, `/files/${file.name}`);\n  const uploadTask = uploadBytesResumable(storageRef, file);\n  uploadTask.on(\"state_changed\", snapshot => {\n    const prog = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n    setProgress(prog);\n  }, err => console.log(err), () => {\n    getDownloadURL(uploadTask.snapshot.ref).then(url => {\n      console.log(url);\n      const song = {\n        name,\n        artist,\n        url\n      };\n      fetch(\"http:localhost:8080/song/add\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(song)\n      }).then(() => {\n        console.log(\"New song added\");\n      });\n    });\n  });\n};","map":{"version":3,"names":["ref","uploadBytesResumable","getDownloadURL","useState","storage","uploadFiles","file","name","artist","setProgress","storageRef","uploadTask","on","snapshot","prog","Math","round","bytesTransferred","totalBytes","err","console","log","then","url","song","fetch","method","headers","body","JSON","stringify"],"sources":["C:/Users/Alex/Documents/Spotify Project/SPOTIFY-FRONTEND-GOOD/spot/src/FileUpload.js"],"sourcesContent":["import { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport { useState } from \"react\";\r\nimport storage from \"./firebaseConfig\";\r\n\r\n\r\n\r\n  export const uploadFiles = (file, name, artist, setProgress) => {\r\n            // State to store uploaded file\r\n        const storageRef = ref(storage, `/files/${file.name}`);\r\n        const uploadTask = uploadBytesResumable(storageRef, file);\r\n  \r\n        uploadTask.on(\"state_changed\", (snapshot) => {\r\n          const prog = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n          setProgress(prog);\r\n        }, (err) => console.log(err),\r\n        () => {\r\n            getDownloadURL(uploadTask.snapshot.ref)\r\n            .then(url => {\r\n              console.log(url);\r\n              const song={name, artist, url};\r\n              fetch(\"http:localhost:8080/song/add\",{\r\n                method:\"POST\",\r\n                headers:{\"Content-Type\":\"application/json\"},\r\n                body:JSON.stringify(song)\r\n            }).then(()=>{\r\n              console.log(\"New song added\")\r\n            })\r\n            });\r\n\r\n        } );\r\n      }\r\n\r\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,oBAAoB,EAAEC,cAAc,QAAQ,kBAAkB;AAC5E,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,kBAAkB;AAIpC,OAAO,MAAMC,WAAW,GAAG,CAACC,IAAI,EAAEC,IAAI,EAAEC,MAAM,EAAEC,WAAW,KAAK;EACtD;EACJ,MAAMC,UAAU,GAAGV,GAAG,CAACI,OAAO,EAAG,UAASE,IAAI,CAACC,IAAK,EAAC,CAAC;EACtD,MAAMI,UAAU,GAAGV,oBAAoB,CAACS,UAAU,EAAEJ,IAAI,CAAC;EAEzDK,UAAU,CAACC,EAAE,CAAC,eAAe,EAAGC,QAAQ,IAAK;IAC3C,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAAEH,QAAQ,CAACI,gBAAgB,GAAGJ,QAAQ,CAACK,UAAU,GAAI,GAAG,CAAC;IAChFT,WAAW,CAACK,IAAI,CAAC;EACnB,CAAC,EAAGK,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,EAC5B,MAAM;IACFjB,cAAc,CAACS,UAAU,CAACE,QAAQ,CAACb,GAAG,CAAC,CACtCsB,IAAI,CAACC,GAAG,IAAI;MACXH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MAChB,MAAMC,IAAI,GAAC;QAACjB,IAAI;QAAEC,MAAM;QAAEe;MAAG,CAAC;MAC9BE,KAAK,CAAC,8BAA8B,EAAC;QACnCC,MAAM,EAAC,MAAM;QACbC,OAAO,EAAC;UAAC,cAAc,EAAC;QAAkB,CAAC;QAC3CC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACN,IAAI;MAC5B,CAAC,CAAC,CAACF,IAAI,CAAC,MAAI;QACVF,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC/B,CAAC,CAAC;IACF,CAAC,CAAC;EAEN,CAAC,CAAE;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}