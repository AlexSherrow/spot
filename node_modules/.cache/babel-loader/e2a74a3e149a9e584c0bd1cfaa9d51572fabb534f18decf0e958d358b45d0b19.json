{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\Spotify Project\\\\SPOTIFY-FRONTEND-GOOD\\\\spot\\\\src\\\\layouts\\\\HomePage\\\\Components\\\\SongList.jsx\",\n  _s = $RefreshSig$();\nimport { initializeApp } from \"firebase/app\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { uploadFiles } from \"../../../fileUploadUtils\";\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\nimport { StatusBar } from \"./Footer/StatusBar\";\nimport { Sound, getCurrentSongName, start, pause, play, restart } from \"./Sound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function SongList() {\n  _s();\n  const [songName, setSongName] = useState([]);\n  const [artistName, setArtistName] = useState('');\n  const [songsList, setSongsList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/song/getAll\")\n    //useEffect(() => {fetch(\"https://alexsherrowspotify.herokuapp.com/song/getAll\")\n    .then(res => res.json()).then(result => {\n      console.log(result);\n      result = JSON.stringify(result);\n      result = JSON.parse(result);\n      for (const key in result) {\n        songsList.push( /*#__PURE__*/_jsxDEV(Sound, {\n          path: result[key].url,\n          name: result[key].name,\n          artist: result[key].artist,\n          setSongName: setSongName,\n          setArtistName: setArtistName\n        }, result[key].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }, this));\n      }\n      setIsLoading(true);\n      setSongsList(songs);\n      setIsLoading(false);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [songsList, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(StatusBar, {\n        songName: songName,\n        artistName: artistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PreviousButton, {\n        setSongName: setSongName,\n        setArtistName: setArtistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PauseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PlayButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        setSongName: setSongName,\n        setArtistName: setArtistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FileUpload, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n  function NextButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextButtonClick,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 14\n    }, this);\n  }\n  function handleNextButtonClick() {\n    getNextSong();\n  }\n  function PauseButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePauseButton,\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this);\n  }\n  function handlePauseButton() {\n    pause();\n  }\n  function PlayButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlayButton,\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this);\n  }\n  function handlePlayButton() {\n    play();\n    initializeApp();\n  }\n  function PreviousButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePreviousButtonClick,\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 14\n    }, this);\n  }\n  function handlePreviousButtonClick() {\n    getPreviousSong();\n  }\n  function getNextSong() {\n    for (let i = 0; i < songsList.length; i++) {\n      if (songsList[i].props.name === getCurrentSongName()) {\n        restart();\n        if (i === songsList.length - 1) start(songsList[0].props);else start(songsList[i + 1].props);\n        break;\n      }\n    }\n  }\n  function getPreviousSong() {\n    for (let i = 0; i < songsList.length; i++) {\n      if (songsList[i].props.name === getCurrentSongName()) {\n        restart();\n        if (i === 0) start(songsList[songsList.length - 1].props);else start(songsList[i - 1].props);\n        break;\n      }\n    }\n  }\n  function FileUpload() {\n    const formHandler = e => {\n      e.preventDefault();\n      const file = e.target[0].files[0];\n      const name = e.target[1].value;\n      const artist = e.target[2].value;\n      uploadFiles(file, name, artist, setProgress);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"songName\",\n          defaultValue: \"Song Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"artistName\",\n          defaultValue: \"Artist Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Uploaded \", progress, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(SongList, \"ao4hto6cV9D+2dqzb4qsWpnnKZE=\");\n_c = SongList;\n;\nvar _c;\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"names":["initializeApp","useEffect","useState","useRef","uploadFiles","SpinnerLoading","StatusBar","Sound","getCurrentSongName","start","pause","play","restart","SongList","songName","setSongName","artistName","setArtistName","songsList","setSongsList","isLoading","setIsLoading","progress","setProgress","fetch","then","res","json","result","console","log","JSON","stringify","parse","key","push","url","name","artist","id","songs","NextButton","handleNextButtonClick","getNextSong","PauseButton","handlePauseButton","PlayButton","handlePlayButton","PreviousButton","handlePreviousButtonClick","getPreviousSong","i","length","props","FileUpload","formHandler","e","preventDefault","file","target","files","value"],"sources":["C:/Users/Alex/Documents/Spotify Project/SPOTIFY-FRONTEND-GOOD/spot/src/layouts/HomePage/Components/SongList.jsx"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { uploadFiles } from \"../../../fileUploadUtils\";\r\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\r\nimport { StatusBar } from \"./Footer/StatusBar\";\r\nimport { Sound, getCurrentSongName, start, pause, play, restart } from \"./Sound\";\r\n\r\nexport function SongList() {\r\n  const [songName, setSongName] = useState([]);\r\n  const [artistName, setArtistName] = useState('');\r\n  const [songsList, setSongsList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  useEffect(() => {fetch(\"http://localhost:8080/song/getAll\")\r\n  //useEffect(() => {fetch(\"https://alexsherrowspotify.herokuapp.com/song/getAll\")\r\n  .then(res=>res.json())\r\n  .then((result)=>{\r\n    console.log(result);\r\n    result = JSON.stringify(result);\r\n    result = JSON.parse(result);\r\n    \r\n    for(const key in result)\r\n    {\r\n      songsList.push(\r\n      <Sound key = {result[key].id}\r\n      path = {result[key].url}\r\n      name = {result[key].name}\r\n      artist = {result[key].artist}\r\n      setSongName = {setSongName}\r\n      setArtistName = {setArtistName}/>);\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setSongsList(songs);\r\n    setIsLoading(false);\r\n  }\r\n)\r\n}, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <SpinnerLoading/>\r\n    )\r\n  }\r\n    return (\r\n    <>\r\n    {songsList}\r\n    <div>\r\n    <StatusBar\r\n    songName={songName} \r\n    artistName={artistName}/>\r\n    <PreviousButton setSongName = {setSongName} setArtistName = {setArtistName}/>\r\n    <PauseButton/>\r\n    <PlayButton/>\r\n    <NextButton setSongName = {setSongName} setArtistName = {setArtistName}/>\r\n    </div>\r\n    <div>\r\n    <FileUpload/>\r\n    </div>\r\n    </>\r\n    );\r\n\r\n    \r\n     function NextButton() {\r\n      return <button onClick={handleNextButtonClick}>Next</button>;\r\n    }\r\n    \r\n    function handleNextButtonClick() {\r\n      getNextSong();\r\n    }\r\n\r\n    function PauseButton() {\r\n      return (\r\n          <button onClick={handlePauseButton}>Pause</button>\r\n      );\r\n    }\r\n    \r\n    function handlePauseButton() {\r\n          pause();\r\n    }\r\n\r\n    function PlayButton() {\r\n      return (\r\n          <button onClick={handlePlayButton}>Play</button>\r\n      );\r\n    }\r\n    \r\n    function handlePlayButton() {\r\n        play();\r\n        initializeApp();\r\n    }\r\n\r\n    function PreviousButton() {\r\n      return <button onClick={handlePreviousButtonClick}>Prev</button>;\r\n    }\r\n    \r\n    function handlePreviousButtonClick() {\r\n      getPreviousSong();\r\n    }\r\n\r\n    function getNextSong() \r\n{\r\n  for(let i = 0; i < songsList.length; i++)\r\n  {\r\n    if(songsList[i].props.name === getCurrentSongName())\r\n    {\r\n      restart();\r\n      if(i === songsList.length - 1)\r\n      start(songsList[0].props);\r\n      else\r\n      start(songsList[i + 1].props);\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction getPreviousSong() \r\n{\r\n  for(let i = 0; i < songsList.length; i++)\r\n  {\r\n    if(songsList[i].props.name === getCurrentSongName())\r\n    {\r\n      restart();\r\n      if(i === 0)\r\n      start(songsList[songsList.length - 1].props);\r\n      else\r\n      start(songsList[i - 1].props);\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction FileUpload() {\r\n\r\n  const formHandler = (e) => {\r\n      e.preventDefault();\r\n      const file = e.target[0].files[0];\r\n      const name = e.target[1].value;\r\n      const artist = e.target[2].value;\r\n      uploadFiles(file, name, artist, setProgress)\r\n      };\r\n      \r\n    return(\r\n      <div className=\"App\">\r\n          <form onSubmit={formHandler}>\r\n              <input type=\"file\" className=\"file\"/>\r\n              <input type=\"text\" name=\"songName\" defaultValue='Song Name'/>\r\n              <input type=\"text\" name=\"artistName\" defaultValue='Artist Name'/>\r\n              <button type=\"submit\">Upload</button>\r\n          </form>\r\n          <hr/>\r\n          <h3>Uploaded {progress} %</h3>\r\n      </div>\r\n    );\r\n\r\n}\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}