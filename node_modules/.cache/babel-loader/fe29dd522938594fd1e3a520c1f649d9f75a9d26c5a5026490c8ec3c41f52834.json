{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\Spotify Project\\\\SPOTIFY-FRONTEND-GOOD\\\\spot\\\\src\\\\layouts\\\\HomePage\\\\Components\\\\SongList.jsx\",\n  _s = $RefreshSig$();\nimport { initializeApp } from \"firebase/app\";\nimport { useEffect, useState } from \"react\";\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\nimport { StatusBar } from \"./Footer/StatusBar\";\nimport { Sound, getCurrentSongName, start, pause, play, restart } from \"./Sound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function SongList() {\n  _s();\n  const [songName, setSongName] = useState('');\n  const [artistName, setArtistName] = useState('');\n  const [songsList, setSongsList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/song/getAllSongs\",\n    //fetch(\"https://alexsherrowspotify.herokuapp.com/song/getAllSongs\",\n    {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(result => {\n      setIsLoading(true);\n      result = JSON.stringify(result);\n      result = JSON.parse(result);\n      for (const key in result) {\n        songsList.push( /*#__PURE__*/_jsxDEV(Sound, {\n          path: result[key].url,\n          name: result[key].name,\n          artist: result[key].artist,\n          album: result[key].album,\n          setSongName: setSongName,\n          setArtistName: setArtistName\n        }, result[key].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }, this));\n      }\n      setSongsList(songsList);\n      setIsLoading(false);\n    });\n  }, [songsList]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [songsList, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(StatusBar, {\n        songName: songName,\n        artistName: artistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PreviousButton, {\n        setSongName: setSongName,\n        setArtistName: setArtistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PauseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PlayButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        setSongName: setSongName,\n        setArtistName: setArtistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ClickBut, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n  function handleClickBut() {\n    fetch(\"http://localhost:8080/song/getAllSongs\",\n    //fetch(\"https://alexsherrowspotify.herokuapp.com/song/getAllSongs\",\n    {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      setIsLoading(true);\n      result = JSON.stringify(result);\n      result = JSON.parse(result);\n      for (const key in result) {\n        songsList.push( /*#__PURE__*/_jsxDEV(Sound, {\n          path: result[key].url,\n          name: result[key].name,\n          artist: result[key].artist,\n          album: result[key].album,\n          setSongName: setSongName,\n          setArtistName: setArtistName\n        }, result[key].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this));\n      }\n      setSongsList(songsList);\n    });\n    console.log('hi');\n    setIsLoading(false);\n  }\n  function ClickBut() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClickBut,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 14\n    }, this);\n  }\n  function NextButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextButtonClick,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 14\n    }, this);\n  }\n  function handleNextButtonClick() {\n    getNextSong();\n  }\n  function PauseButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePauseButton,\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }, this);\n  }\n  function handlePauseButton() {\n    pause();\n  }\n  function PlayButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlayButton,\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }, this);\n  }\n  function handlePlayButton() {\n    play();\n    initializeApp();\n  }\n  function PreviousButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePreviousButtonClick,\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 14\n    }, this);\n  }\n  function handlePreviousButtonClick() {\n    getPreviousSong();\n  }\n  function getNextSong() {\n    for (let i = 0; i < songsList.length; i++) {\n      if (songsList[i].props.name === getCurrentSongName()) {\n        restart();\n        if (i === songsList.length - 1) start(songsList[0].props);else start(songsList[i + 1].props);\n        break;\n      }\n    }\n  }\n  function getPreviousSong() {\n    for (let i = 0; i < songsList.length; i++) {\n      if (songsList[i].props.name === getCurrentSongName()) {\n        restart();\n        if (i === 0) start(songsList[songsList.length - 1].props);else start(songsList[i - 1].props);\n        break;\n      }\n    }\n  }\n}\n_s(SongList, \"3DqzRD6+oB4BfLk7ZosazC/BiQA=\");\n_c = SongList;\nvar _c;\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"names":["initializeApp","useEffect","useState","SpinnerLoading","StatusBar","Sound","getCurrentSongName","start","pause","play","restart","SongList","songName","setSongName","artistName","setArtistName","songsList","setSongsList","isLoading","setIsLoading","fetch","method","headers","then","res","json","result","JSON","stringify","parse","key","push","url","name","artist","album","id","handleClickBut","console","log","ClickBut","NextButton","handleNextButtonClick","getNextSong","PauseButton","handlePauseButton","PlayButton","handlePlayButton","PreviousButton","handlePreviousButtonClick","getPreviousSong","i","length","props"],"sources":["C:/Users/Alex/Documents/Spotify Project/SPOTIFY-FRONTEND-GOOD/spot/src/layouts/HomePage/Components/SongList.jsx"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\r\nimport { StatusBar } from \"./Footer/StatusBar\";\r\nimport { Sound, getCurrentSongName, start, pause, play, restart } from \"./Sound\";\r\n\r\nexport function SongList() {\r\n  const [songName, setSongName] = useState('');\r\n  const [artistName, setArtistName] = useState('');\r\n  const [songsList, setSongsList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/song/getAllSongs\",\r\n    //fetch(\"https://alexsherrowspotify.herokuapp.com/song/getAllSongs\",\r\n    {\r\n      method:\"GET\",\r\n      headers:{\"Content-Type\":\"application/json\"},\r\n    }\r\n    )\r\n  .then(res=>res.json())\r\n  .then((result)=>{\r\n    setIsLoading(true);\r\n    result = JSON.stringify(result);\r\n    result = JSON.parse(result);\r\n\r\n    for(const key in result)\r\n    {\r\n      songsList.push(\r\n      <Sound key = {result[key].id}\r\n      path = {result[key].url}\r\n      name = {result[key].name}\r\n      artist = {result[key].artist}\r\n      album = {result[key].album}\r\n      setSongName = {setSongName}\r\n      setArtistName = {setArtistName}/>);\r\n    }\r\n    setSongsList(songsList);\r\n    setIsLoading(false);\r\n  }\r\n)\r\n}, [songsList]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <SpinnerLoading/>\r\n    )\r\n  }\r\n    return (\r\n    <>\r\n    {songsList}\r\n    <div>\r\n    <StatusBar\r\n    songName={songName} \r\n    artistName={artistName}/>\r\n    <PreviousButton setSongName = {setSongName} setArtistName = {setArtistName}/>\r\n    <PauseButton/>\r\n    <PlayButton/>\r\n    <NextButton setSongName = {setSongName} setArtistName = {setArtistName}/>\r\n    <ClickBut/>\r\n    </div>\r\n    </>\r\n    );\r\n\r\n    function handleClickBut()\r\n    {\r\n      fetch(\"http://localhost:8080/song/getAllSongs\",\r\n      //fetch(\"https://alexsherrowspotify.herokuapp.com/song/getAllSongs\",\r\n      {\r\n        method:\"GET\",\r\n        headers:{\"Content-Type\":\"application/json\"},\r\n      }\r\n      )\r\n    .then(res=>res.json())\r\n    .then((result)=>{\r\n      console.log(result);\r\n      setIsLoading(true);\r\n      result = JSON.stringify(result);\r\n      result = JSON.parse(result);\r\n  \r\n      for(const key in result)\r\n      {\r\n        songsList.push(\r\n        <Sound key = {result[key].id}\r\n        path = {result[key].url}\r\n        name = {result[key].name}\r\n        artist = {result[key].artist}\r\n        album = {result[key].album}\r\n        setSongName = {setSongName}\r\n        setArtistName = {setArtistName}/>);\r\n      }\r\n      setSongsList(songsList);\r\n    }\r\n    )\r\n    console.log('hi')\r\n    setIsLoading(false);\r\n    }\r\n    \r\n\r\n    function ClickBut() {\r\n      return <button onClick={handleClickBut}>Next</button>;\r\n    }\r\n\r\n     function NextButton() {\r\n      return <button onClick={handleNextButtonClick}>Next</button>;\r\n    }\r\n    \r\n    function handleNextButtonClick() {\r\n      getNextSong();\r\n    }\r\n\r\n    function PauseButton() {\r\n      return (\r\n          <button onClick={handlePauseButton}>Pause</button>\r\n      );\r\n    }\r\n    \r\n    function handlePauseButton() {\r\n          pause();\r\n    }\r\n\r\n    function PlayButton() {\r\n      return (\r\n          <button onClick={handlePlayButton}>Play</button>\r\n      );\r\n    }\r\n    \r\n    function handlePlayButton() {\r\n        play();\r\n        initializeApp();\r\n    }\r\n\r\n    function PreviousButton() {\r\n      return <button onClick={handlePreviousButtonClick}>Prev</button>;\r\n    }\r\n    \r\n    function handlePreviousButtonClick() {\r\n      getPreviousSong();\r\n    }\r\n\r\n    function getNextSong() \r\n{\r\n  for(let i = 0; i < songsList.length; i++)\r\n  {\r\n    if(songsList[i].props.name === getCurrentSongName())\r\n    {\r\n      restart();\r\n      if(i === songsList.length - 1)\r\n      start(songsList[0].props);\r\n      else\r\n      start(songsList[i + 1].props);\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction getPreviousSong() \r\n{\r\n  for(let i = 0; i < songsList.length; i++)\r\n  {\r\n    if(songsList[i].props.name === getCurrentSongName())\r\n    {\r\n      restart();\r\n      if(i === 0)\r\n      start(songsList[songsList.length - 1].props);\r\n      else\r\n      start(songsList[i - 1].props);\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}